
package org.isf.medicalstock.gui;

import javax.swing.JDialog;
import javax.swing.JTable;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import org.isf.generaldata.MessageBundle;
import org.isf.medicalstock.gui.MovStockMultipleCharging.JTableModel;
import org.isf.medicalstock.gui.MovStockMultipleCharging.StockMovModel;
import org.isf.priceslist.model.Price;
import org.isf.utils.jobjects.OhDefaultCellRenderer;
import org.isf.utils.jobjects.OhTableModel;

import java.awt.BorderLayout;
import java.awt.GridBagLayout;
import java.awt.GridBagConstraints;
import java.awt.Insets;
import java.awt.Rectangle;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionListener;
import java.awt.FlowLayout;
import javax.swing.JLabel;

/**
 *
 * @author magloire
 */
public class LotPicker extends javax.swing.JPanel {

	OhDefaultCellRenderer cellRenderer = new OhDefaultCellRenderer();
	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	/**
	 * Creates new form ChooseMedicaments
	 */
	public LotPicker(TableModel model) {
		initComponents(model);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	private void initComponents(TableModel model) {

		jPanel3 = new javax.swing.JPanel();
		jPanel1 = new javax.swing.JPanel();

		jPanel3.setBackground(new java.awt.Color(240, 240, 240));

		jPanel1.setBackground(new java.awt.Color(240, 240, 240));

		setLayout(new BorderLayout(10, 10));
		add(jPanel1, BorderLayout.CENTER);
		GridBagLayout gbl_jPanel1 = new GridBagLayout();
		gbl_jPanel1.columnWidths = new int[] { 575, 0 };
		gbl_jPanel1.rowHeights = new int[] {30, 268, 0};
		gbl_jPanel1.columnWeights = new double[] { 1.0, Double.MIN_VALUE };
		gbl_jPanel1.rowWeights = new double[] { 0.0, 1.0, Double.MIN_VALUE };
		jPanel1.setLayout(gbl_jPanel1);
		jScrollPane1 = new javax.swing.JScrollPane();
		jTableData = new javax.swing.JTable();

		jTableData.setDefaultRenderer(Object.class, cellRenderer);
		jTableData.setDefaultRenderer(Double.class, cellRenderer);
		jTableData.addMouseMotionListener(new MouseMotionListener() {
			@Override
			public void mouseMoved(MouseEvent e) {
				// TODO Auto-generated method stub
				JTable aTable = (JTable) e.getSource();
				int itsRow = aTable.rowAtPoint(e.getPoint());
				if (itsRow >= 0) {
					cellRenderer.setHoveredRow(itsRow);
				} else {
					cellRenderer.setHoveredRow(-1);
				}
				aTable.repaint();
			}

			@Override
			public void mouseDragged(MouseEvent e) {
				// TODO Auto-generated method stub

			}
		});
		jTableData.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseExited(MouseEvent e) {
				cellRenderer.setHoveredRow(-1);
			}
		});

		jTableData.setModel(model);
		jTableData.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
		jTableData.setShowVerticalLines(false);
		jTableData.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				jTableDataMouseClicked(evt);
			}

			public void mousePressed(java.awt.event.MouseEvent evt) {
				if (evt.getClickCount() == 2) {
					validateSelection();
				}
			}
		});

		jTableData.addKeyListener(new KeyAdapter() {
			@Override
			public void keyPressed(KeyEvent e) {
				if (e.getKeyCode() == KeyEvent.VK_ENTER) {
					validateSelection();
				}
				else if(e.getKeyCode()==KeyEvent.VK_ESCAPE){
					cancelSelection();
				}
				super.keyPressed(e);
			}
		});

		jScrollPane1.setViewportView(jTableData);
		GridBagConstraints gbc_jScrollPane1 = new GridBagConstraints();
		gbc_jScrollPane1.insets = new Insets(10, 15, 5, 15);
		gbc_jScrollPane1.fill = GridBagConstraints.BOTH;
		gbc_jScrollPane1.gridx = 0;
		gbc_jScrollPane1.gridy = 1;
		jPanel1.add(jScrollPane1, gbc_jScrollPane1);
		
		lblMessage = new JLabel("Existing lots");
		GridBagConstraints gbc_lblExistingLots = new GridBagConstraints();
		gbc_lblExistingLots.anchor = GridBagConstraints.SOUTHWEST;
		gbc_lblExistingLots.weighty = 1.0;
		gbc_lblExistingLots.gridx = 0;
		gbc_lblExistingLots.gridy = 0;
		jPanel1.add(lblMessage, gbc_lblExistingLots);
		add(jPanel3, BorderLayout.NORTH);
		GridBagLayout gbl_jPanel3 = new GridBagLayout();
		gbl_jPanel3.columnWidths = new int[] { 90, 237, 0 };
		gbl_jPanel3.rowHeights = new int[] { 50, 0 };
		gbl_jPanel3.columnWeights = new double[] { 0.0, 1.0, Double.MIN_VALUE };
		gbl_jPanel3.rowWeights = new double[] { 0.0, Double.MIN_VALUE };
		jPanel3.setLayout(gbl_jPanel3);


		jPanel2 = new javax.swing.JPanel();
		jButtonSelect = new javax.swing.JButton();
		jButtonQuit = new javax.swing.JButton();

		jPanel2.setBackground(new java.awt.Color(240, 240, 240));

		jButtonSelect.setText(MessageBundle.getMessage("angal.ward.select"));
		jButtonSelect.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				jButtonSelectMouseClicked(evt);
			}
		});
		jButtonSelect.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButtonSelectActionPerformed(evt);
			}
		});

		jButtonQuit.setText(MessageBundle.getMessage("angal.common.cancel"));
		jButtonQuit.addMouseListener(new java.awt.event.MouseAdapter() {
			public void mouseClicked(java.awt.event.MouseEvent evt) {
				cancelSelection();
			}
		});
		add(jPanel2, BorderLayout.SOUTH);
		jPanel2.setLayout(new FlowLayout(FlowLayout.RIGHT, 5, 5));
		jPanel2.add(jButtonSelect);
		jPanel2.add(jButtonQuit);

	}

	private void jTableDataMouseClicked(java.awt.event.MouseEvent evt) {

	}

	private void validateSelection() {
		this.setSelectedRow(this.jTableData.getSelectedRow());
		this.setVisible(false);
		this.getParentFrame().dispose();

	}

	private void jButtonSelectActionPerformed(java.awt.event.ActionEvent evt) {

	}

	private void jButtonSelectMouseClicked(java.awt.event.MouseEvent evt) {
		this.setSelectedRow(this.jTableData.getSelectedRow());
		this.setVisible(false);
		this.getParentFrame().dispose();
	}

	private void cancelSelection() {
		selectedRow=-1;
		this.setVisible(false);
		this.getParentFrame().dispose();
	}

	private int selectedRow = -1;

	public int getSelectedRow() {
		return selectedRow;
	}

	private void setSelectedRow(int selectedRow) {
		this.selectedRow = selectedRow;
	}

	private JDialog parentFrame;

	public JDialog getParentFrame() {
		return parentFrame;
	}

	public void setParentFrame(JDialog parentFrame) {
		this.parentFrame = parentFrame;
	}

	private javax.swing.JButton jButtonSelect;
	private javax.swing.JButton jButtonQuit;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JPanel jPanel2;
	private javax.swing.JPanel jPanel3;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JTable jTableData;
	private JLabel lblMessage;

}
